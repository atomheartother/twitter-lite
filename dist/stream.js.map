{"version":3,"file":"stream.js","sources":["../stream.js"],"sourcesContent":["const EventEmitter = require('events');\nconst END = '\\r\\n';\nconst END_LENGTH = 2;\n\nclass Stream extends EventEmitter {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n\n  parse(buffer) {\n    console.log(`Got ${buffer.length}B buffer`);\n    this.buffer += buffer.toString('utf8');\n    let index;\n    let json;\n\n    while ((index = this.buffer.indexOf(END)) > -1) {\n      json = this.buffer.slice(0, index);\n      this.buffer = this.buffer.slice(index + END_LENGTH);\n      if (json.length > 0) {\n        try {\n          json = JSON.parse(json);\n          console.log(`Emitting ${json.event || 'data'} with json body`);\n          console.log(json);\n          this.emit(json.event || 'data', json);\n        } catch (error) {\n          error.source = json;\n          this.emit('error', error);\n        }\n      } else {\n        this.emit('ping');\n      }\n    }\n  }\n}\n\nmodule.exports = Stream;\n"],"names":["const","Stream","super","this","buffer","parse","index","json","console","log","toString","indexOf","slice","length","JSON","event","emit","error","source","require","module","exports"],"mappings":"AAAAA,IAIMC,cACJ,aACEC,aACAC,KAAKC,OAAS,mGAGhBC,eAAMD,OAGAE,EACAC,EAEJ,IALAC,QAAQC,WAAWL,qBACnBD,KAAKC,QAAUA,EAAOM,SAAS,SAIvBJ,EAAQH,KAAKC,OAAOO,QAfpB,UAeqC,GAG3C,GAFAJ,OAAYH,OAAOQ,MAAM,EAAGN,QACvBF,YAAcA,OAAOQ,MAAMN,EAhBnB,GAiBTC,EAAKM,OAAS,EAChB,IACEN,EAAOO,KAAKT,MAAME,GAClBC,QAAQC,iBAAgBF,EAAKQ,OAAS,2BACtCP,QAAQC,IAAIF,QACPS,KAAKT,EAAKQ,OAAS,OAAQR,SACzBU,GACPA,EAAMC,OAASX,OACVS,KAAK,QAASC,aAGhBD,KAAK,YA9BGG,QAAQ,WAoC7BC,OAAOC,QAAUpB"}